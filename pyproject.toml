[build-system]
requires = ["maturin>=0.14,<0.15"]
build-backend = "maturin"

[project]
name = "cylindra"
description = "Spectral analysis, simulation and subtomogram averaging of heterogenic cylindrical structures"
keywords = ["gui", "napari", "cryo-ET", "tomography"]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = { file = "LICENSE" }
dynamic = ["version"]
dependencies = [
    "impy-array>=2.3.0",
    "acryo>=0.4.5",
    "macro-kit>=0.4.6",
    "magicgui>=0.8.0",
    "magic-class>=0.7.6",
    "psygnal>=0.9.1",
    "superqt[iconify]>=0.6.1",
    "pyqtgraph>=0.12.4",
    "pyarrow>=11.0.0",
    "numpy>=1.23.0",
    "scipy>=1.7.1",
    "pandas>=1.5.0",
    "polars>=0.19.5",
    "scikit-image>=0.21.0",
    "napari>=0.4.18",
    "qtpy>=2.3.1",
    "qt-command-palette>=0.0.7",
    "matplotlib",
]
authors = [
    { email = "liuhanjin-sc@g.ecc.u-tokyo.ac.jp" },
    { name = "Hanjin Liu" }
]

[project.optional-dependencies]
testing = [
    "pytest",
    "pytest-qt",
    "pytest-cov",
    "scikit-learn",
]
all = [
    "pyqt5",
    "scikit-learn>=1.2.2",
    "mrcfile>=1.3.0",
    "tifffile>=2023.2.28",
]
[project.scripts]
cylindra = "cylindra.__main__:main"

[tool.maturin]
include = ["**/*.pyi", "*.pyi", "**/*.svg", "**/*.yaml", "**/*.qss", "**/*.json"]
features = ["pyo3/extension-module"]
module-name = "cylindra._cylindra_ext"

[tool.setuptools]
include-package-data = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v"
filterwarnings = [
    "ignore::DeprecationWarning:qtpy",
    "ignore::DeprecationWarning:ipykernel",
    "ignore::DeprecationWarning:pkg_resources",
    "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
    "ignore::DeprecationWarning:qtconsole",
    "ignore:distutils Version classes are deprecated",
    "ignore:path is deprecated:DeprecationWarning",
    "ignore:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    'if __name__ == "__main__":',
    'if sys.platform == "darwin":',
    'def __repr__(self)',
    "@overload",
    "except ImportError",
    "except ImportError*",
    "except PackageNotFoundError",
    "raise NotImplementedError",
    "pass",
]
